{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/boxes.service\";\nimport * as i2 from \"src/app/Services/commande-post.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../header/header.component\";\nfunction ListBoxComponent_div_5_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const aliments_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", aliments_r4.quantite, \"x \", aliments_r4.nom, \" \");\n  }\n}\nfunction ListBoxComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9);\n    i0.ɵɵelement(2, \"img\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 11);\n    i0.ɵɵtext(5, \"Compositions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ul\");\n    i0.ɵɵtemplate(7, ListBoxComponent_div_5_li_7_Template, 2, 2, \"li\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\")(9, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ListBoxComponent_div_5_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.incrementAndDisplay(item_r1.id));\n    });\n    i0.ɵɵtext(10, \" + \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ListBoxComponent_div_5_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.decrementAndDisplay(item_r1.id));\n    });\n    i0.ɵɵtext(12, \" - \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", item_r1.img, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", item_r1.nom);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", item_r1.nom, \" \", item_r1.prix.toFixed(2), \"\\u20AC \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", item_r1.id_aliments);\n  }\n}\nexport class ListBoxComponent {\n  constructor(boxesService, commandePostService) {\n    this.boxesService = boxesService;\n    this.commandePostService = commandePostService;\n    this.boxes = [];\n    this.selectedBoxes = [];\n    this.orders = [];\n    this.totalPrice = 0;\n    this.boxQuantities = {};\n  }\n  ngOnInit() {\n    this.boxesService.fetchData().subscribe(data => {\n      this.boxes = data['hydra:member'];\n    });\n  }\n  incrementAndDisplay(boxId) {\n    const box = this.boxes.find(b => b.id === boxId);\n    if (box) {\n      this.boxQuantities[boxId] = (this.boxQuantities[boxId] || 0) + 1;\n      const div = document.getElementById('boxName');\n      if (div) {\n        div.innerHTML = '<h1>Cart</h1>';\n        for (const [id, quantity] of Object.entries(this.boxQuantities)) {\n          const selectedBox = this.boxes.find(b => b.id === parseInt(id));\n          if (selectedBox) {\n            div.innerHTML += `${quantity}x ${selectedBox.nom} ${selectedBox.prix * quantity}€<br>`;\n          }\n        }\n      }\n      this.orders.push({\n        boxId: box.id\n      });\n      console.table(this.orders);\n      // Mettre à jour le prix total\n      this.totalPrice = this.orders.reduce((total, order) => total + box.prix, 0);\n      console.log('Prix total:', this.totalPrice);\n      const PrixTotal = document.getElementById('prixTotal');\n      if (PrixTotal) {\n        PrixTotal.innerHTML = \"Le prix total est:\" + this.totalPrice + \"€\";\n      }\n    }\n  }\n  decrementAndDisplay(boxId) {\n    const box = this.boxes.find(b => b.id === boxId);\n    if (box) {\n      if (this.boxQuantities[boxId] && this.boxQuantities[boxId] > 0) {\n        this.boxQuantities[boxId] -= 1;\n        const div = document.getElementById('boxName');\n        if (div) {\n          div.innerHTML = '';\n          for (const [id, quantity] of Object.entries(this.boxQuantities)) {\n            const selectedBox = this.boxes.find(b => b.id === parseInt(id));\n            if (selectedBox && quantity > 0) {\n              div.innerHTML += `${quantity}x ${selectedBox.nom} ${selectedBox.prix * quantity}€<br>`;\n            }\n          }\n        }\n        const orderIndex = this.orders.findIndex(order => order.boxId === box.id);\n        if (orderIndex !== -1) {\n          this.orders.splice(orderIndex, 1);\n        }\n        console.table(this.orders);\n        // Réduire le prix\n        // Mettre à jour le prix total\n        this.totalPrice = this.orders.reduce((total, order) => total + box.prix, 0);\n        const PrixTotal = document.getElementById('prixTotal');\n        if (PrixTotal) {\n          PrixTotal.innerHTML = \"Le prix total est:\" + this.totalPrice.toFixed(2) + \"€\";\n        }\n      }\n      if (this.orders.length === 0) {\n        // Supprimer le tableau orders\n        this.orders = [];\n      }\n    }\n  }\n  concatenateOrders(orders) {\n    const currentDate = new Date().toISOString();\n    const prixTotal = this.totalPrice;\n    const idBoxs = orders.map(order => `api/boxs/${order.boxId}`);\n    const idBoissons = []; // Replace \"string\" with the actual values\n    const jsonBody = {\n      date: currentDate,\n      prixTotal: prixTotal,\n      idBoxs: idBoxs,\n      idBoissons: idBoissons\n    };\n    this.commandePostService.postData(jsonBody).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error(error);\n    });\n    return JSON.stringify(jsonBody);\n  }\n  static #_ = this.ɵfac = function ListBoxComponent_Factory(t) {\n    return new (t || ListBoxComponent)(i0.ɵɵdirectiveInject(i1.BoxesService), i0.ɵɵdirectiveInject(i2.CommandePostService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListBoxComponent,\n    selectors: [[\"app-list-box\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[1, \"hidden\", \"md:block\", 2, \"background-image\", \"url('../../../assets/img_market.png')\", \"background-size\", \"cover\", \"z-index\", \"3\", \"background-position\", \"right\", \"height\", \"100vh\", \"width\", \"20%\", \"position\", \"fixed\", \"right\", \"0\"], [1, \"flex\", \"justify-center\", \"items-center\", \"space-x-20\", 2, \"margin-top\", \"12%\"], [1, \"w-1/2\", \"mt-20\", \"d-flex\", 2, \"overflow-y\", \"scroll\", \"max-height\", \"600px\", \"max-width\", \"900px\"], [\"class\", \"mb-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"w-1/2\"], [\"id\", \"boxName\", 1, \"w-1/2\"], [\"id\", \"prixTotal\", 2, \"font-weight\", \"bold\"], [3, \"click\"], [1, \"mb-4\"], [1, \"font-bold\", \"text-2xl\"], [\"width\", \"300\", \"height\", \"300\", 3, \"src\", \"alt\"], [1, \"text-xl\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg-blue-500\", \"hover:bg-blue-700\", \"text-white\", \"font-bold\", \"py-2\", \"px-4\", \"rounded\", 3, \"click\"], [1, \"bg-red-500\", \"hover:bg-red-700\", \"text-white\", \"font-bold\", \"py-2\", \"px-4\", \"rounded\", 3, \"click\"]],\n    template: function ListBoxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"aside\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelement(2, \"app-header\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2);\n        i0.ɵɵtemplate(5, ListBoxComponent_div_5_Template, 13, 5, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelement(7, \"div\", 5)(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ListBoxComponent_Template_button_click_9_listener() {\n          return ctx.concatenateOrders(ctx.orders);\n        });\n        i0.ɵɵtext(10, \"commande\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.boxes);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.HeaderComponent],\n    styles: [\"*[_ngcontent-%COMP%]{\\n    padding:0;\\n    margin:0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3QtYm94LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxTQUFTO0lBQ1QsUUFBUTtBQUNaIiwiZmlsZSI6Imxpc3QtYm94LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqe1xuICAgIHBhZGRpbmc6MDtcbiAgICBtYXJnaW46MDtcbn0iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2xpc3QtYm94L2xpc3QtYm94LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxTQUFTO0lBQ1QsUUFBUTtBQUNaO0FBQ0Esd1RBQXdUIiwic291cmNlc0NvbnRlbnQiOlsiKntcbiAgICBwYWRkaW5nOjA7XG4gICAgbWFyZ2luOjA7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","aliments_r4","quantite","nom","ɵɵelement","ɵɵtemplate","ListBoxComponent_div_5_li_7_Template","ɵɵlistener","ListBoxComponent_div_5_Template_button_click_9_listener","restoredCtx","ɵɵrestoreView","_r6","item_r1","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","incrementAndDisplay","id","ListBoxComponent_div_5_Template_button_click_11_listener","ctx_r7","decrementAndDisplay","ɵɵpropertyInterpolate","img","ɵɵsanitizeUrl","prix","toFixed","ɵɵproperty","id_aliments","ListBoxComponent","constructor","boxesService","commandePostService","boxes","selectedBoxes","orders","totalPrice","boxQuantities","ngOnInit","fetchData","subscribe","data","boxId","box","find","b","div","document","getElementById","innerHTML","quantity","Object","entries","selectedBox","parseInt","push","console","table","reduce","total","order","log","PrixTotal","orderIndex","findIndex","splice","length","concatenateOrders","currentDate","Date","toISOString","prixTotal","idBoxs","map","idBoissons","jsonBody","date","postData","response","error","JSON","stringify","_","ɵɵdirectiveInject","i1","BoxesService","i2","CommandePostService","_2","selectors","decls","vars","consts","template","ListBoxComponent_Template","rf","ctx","ListBoxComponent_div_5_Template","ListBoxComponent_Template_button_click_9_listener"],"sources":["/Users/alexandreguedes/Desktop/Zushi/src/app/component/list-box/list-box.component.ts","/Users/alexandreguedes/Desktop/Zushi/src/app/component/list-box/list-box.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BoxesService } from 'src/app/Services/boxes.service';\nimport { OnInit } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommandePostService } from 'src/app/Services/commande-post.service';\n\n@Component({\n  selector: 'app-list-box',\n  templateUrl: './list-box.component.html',\n  styleUrls: ['./list-box.component.css']\n})\nexport class ListBoxComponent implements OnInit {\n  boxes: any = [];\n\n  constructor(private boxesService: BoxesService, private commandePostService: CommandePostService ) { }\n\n  ngOnInit(): void {\n    this.boxesService.fetchData().subscribe((data: any) => {\n      this.boxes = data['hydra:member'];\n    });\n  }\n\n  selectedBoxes: { id: number, price: number }[] = [];\n\n  orders: { boxId: number, prixTotal?: number }[] = [];\n  totalPrice: number = 0;\n\n  boxQuantities: { [boxId: number]: number } = {};\n\n  incrementAndDisplay(boxId: number): void {\n    const box = this.boxes.find((b: any) => b.id === boxId);\n    if (box) {\n      this.boxQuantities[boxId] = (this.boxQuantities[boxId] || 0) + 1;\n      const div = document.getElementById('boxName');\n      if (div) {\n        div.innerHTML = '<h1>Cart</h1>';\n        for (const [id, quantity] of Object.entries(this.boxQuantities)) {\n          const selectedBox = this.boxes.find((b: any) => b.id === parseInt(id));\n          if (selectedBox) {\n            div.innerHTML += `${quantity}x ${selectedBox.nom} ${selectedBox.prix * quantity}€<br>`;\n          }\n        }\n      }\n\n      this.orders.push({ boxId: box.id});\n      console.table(this.orders);\n\n      // Mettre à jour le prix total\n      this.totalPrice = this.orders.reduce((total, order) => total + box.prix, 0);\n      console.log('Prix total:', this.totalPrice);\n      const PrixTotal = document.getElementById('prixTotal');\n      if (PrixTotal) {\n        PrixTotal.innerHTML = \"Le prix total est:\"  +this.totalPrice + \"€\";\n      }\n    }\n  }\n\n  decrementAndDisplay(boxId: number): void {\n    const box = this.boxes.find((b: any) => b.id === boxId);\n    if (box) {\n      if (this.boxQuantities[boxId] && this.boxQuantities[boxId] > 0) {\n        this.boxQuantities[boxId] -= 1;\n        const div = document.getElementById('boxName');\n        if (div) {\n          div.innerHTML = '';\n          for (const [id, quantity] of Object.entries(this.boxQuantities)) {\n            const selectedBox = this.boxes.find((b: any) => b.id === parseInt(id));\n            if (selectedBox && quantity > 0) {\n              div.innerHTML += `${quantity}x ${selectedBox.nom} ${selectedBox.prix * quantity}€<br>`;\n             \n            }\n          }\n        }\n\n        const orderIndex = this.orders.findIndex((order) => order.boxId === box.id);\n        if (orderIndex !== -1) {\n          this.orders.splice(orderIndex, 1);\n        }\n        console.table(this.orders);\n\n        // Réduire le prix\n\n        // Mettre à jour le prix total\n        this.totalPrice = this.orders.reduce((total, order) => total + box.prix, 0);\n        const PrixTotal = document.getElementById('prixTotal');\n        if (PrixTotal) {\n          PrixTotal.innerHTML = \"Le prix total est:\"  + this.totalPrice.toFixed(2) + \"€\";\n        }\n      }\n\n      if (this.orders.length === 0) {\n        // Supprimer le tableau orders\n        this.orders = [];\n      }\n    }\n  }\n\nconcatenateOrders(orders: { boxId: number, prixTotal?: number }[]): string {\n  const currentDate = new Date().toISOString();\n  const prixTotal = this.totalPrice;\n  const idBoxs = orders.map(order => `api/boxs/${order.boxId}`);\n  const idBoissons: string[] = []; // Replace \"string\" with the actual values\n\n  const jsonBody = {\n    date: currentDate,\n    prixTotal: prixTotal,\n    idBoxs: idBoxs,\n    idBoissons: idBoissons\n  };\n  this.commandePostService.postData(jsonBody).subscribe(response => {\n    console.log(response);\n  }, error => {\n    console.error(error);\n  });\n\n  return JSON.stringify(jsonBody);\n}\n\n}\n    \n  \n\n\n\n","\n\n\n\n\n\n<aside class=\"hidden md:block\" style=\"background-image: url('../../../assets/img_market.png'); background-size: cover; z-index: 3; background-position: right; height: 100vh; width: 20%; position: fixed; right: 0;\"></aside>\n\n<div  >\n  <app-header></app-header>\n\n\n</div>\n<div class=\"flex justify-center items-center space-x-20\" style=\"\n    margin-top: 12%;\n\">\n  <div class=\"w-1/2 mt-20 d-flex \" style=\"overflow-y: scroll; max-height: 600px; max-width: 900px;\">\n    <div *ngFor=\"let item of boxes; let i = index\" class=\"mb-4\">\n      <div class=\"font-bold text-2xl\">\n        <img src=\"{{item.img}}\" alt=\"{{item.nom}}\" width=\"300\" height=\"300\">{{ item.nom }} {{ item.prix.toFixed(2) }}€\n      </div>\n      <div class=\"text-xl\">Compositions</div>\n      <ul>\n        <li *ngFor=\"let aliments of item.id_aliments\">\n          {{aliments.quantite}}x     {{aliments.nom }}\n        </li>\n      </ul>\n      <div>\n        <button (click)=\"incrementAndDisplay(item.id)\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n          +\n        </button>\n        <button (click)=\"decrementAndDisplay(item.id)\" class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">\n          -\n        </button>\n\n      </div>\n    </div>\n  </div>\n  <div class=\"w-1/2\">\n    <div id=\"boxName\" class=\"w-1/2\"></div>\n    <div style=\"font-weight: bold;\"id=\"prixTotal\"></div>\n    <button (click)=\"concatenateOrders(this.orders)\">commande</button>\n  </div>\n</div>\n\n"],"mappings":";;;;;;;ICuBQA,EAAA,CAAAC,cAAA,SAA8C;IAC5CD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IADHH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAC,WAAA,CAAAC,QAAA,QAAAD,WAAA,CAAAE,GAAA,MACF;;;;;;IARJR,EAAA,CAAAC,cAAA,aAA4D;IAExDD,EAAA,CAAAS,SAAA,cAAoE;IAAAT,EAAA,CAAAE,MAAA,GACtE;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,cAAqB;IAAAD,EAAA,CAAAE,MAAA,mBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAM;IACvCH,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAU,UAAA,IAAAC,oCAAA,iBAEK;IACPX,EAAA,CAAAG,YAAA,EAAK;IACLH,EAAA,CAAAC,cAAA,UAAK;IACKD,EAAA,CAAAY,UAAA,mBAAAC,wDAAA;MAAA,MAAAC,WAAA,GAAAd,EAAA,CAAAe,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAnB,EAAA,CAAAoB,aAAA;MAAA,OAASpB,EAAA,CAAAqB,WAAA,CAAAF,MAAA,CAAAG,mBAAA,CAAAL,OAAA,CAAAM,EAAA,CAA4B;IAAA,EAAC;IAC5CvB,EAAA,CAAAE,MAAA,WACF;IAAAF,EAAA,CAAAG,YAAA,EAAS;IACTH,EAAA,CAAAC,cAAA,kBAA0H;IAAlHD,EAAA,CAAAY,UAAA,mBAAAY,yDAAA;MAAA,MAAAV,WAAA,GAAAd,EAAA,CAAAe,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAO,MAAA,GAAAzB,EAAA,CAAAoB,aAAA;MAAA,OAASpB,EAAA,CAAAqB,WAAA,CAAAI,MAAA,CAAAC,mBAAA,CAAAT,OAAA,CAAAM,EAAA,CAA4B;IAAA,EAAC;IAC5CvB,EAAA,CAAAE,MAAA,WACF;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAdJH,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAA2B,qBAAA,QAAAV,OAAA,CAAAW,GAAA,EAAA5B,EAAA,CAAA6B,aAAA,CAAkB;IAAC7B,EAAA,CAAA2B,qBAAA,QAAAV,OAAA,CAAAT,GAAA,CAAkB;IAA0BR,EAAA,CAAAI,SAAA,GACtE;IADsEJ,EAAA,CAAAK,kBAAA,KAAAY,OAAA,CAAAT,GAAA,OAAAS,OAAA,CAAAa,IAAA,CAAAC,OAAA,eACtE;IAG2B/B,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAgC,UAAA,YAAAf,OAAA,CAAAgB,WAAA,CAAmB;;;ADZpD,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,YAA0B,EAAUC,mBAAwC;IAA5E,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAF3E,KAAAC,KAAK,GAAQ,EAAE;IAUf,KAAAC,aAAa,GAAoC,EAAE;IAEnD,KAAAC,MAAM,GAA4C,EAAE;IACpD,KAAAC,UAAU,GAAW,CAAC;IAEtB,KAAAC,aAAa,GAAgC,EAAE;EAbsD;EAErGC,QAAQA,CAAA;IACN,IAAI,CAACP,YAAY,CAACQ,SAAS,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MACpD,IAAI,CAACR,KAAK,GAAGQ,IAAI,CAAC,cAAc,CAAC;IACnC,CAAC,CAAC;EACJ;EASAxB,mBAAmBA,CAACyB,KAAa;IAC/B,MAAMC,GAAG,GAAG,IAAI,CAACV,KAAK,CAACW,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAAC3B,EAAE,KAAKwB,KAAK,CAAC;IACvD,IAAIC,GAAG,EAAE;MACP,IAAI,CAACN,aAAa,CAACK,KAAK,CAAC,GAAG,CAAC,IAAI,CAACL,aAAa,CAACK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;MAChE,MAAMI,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;MAC9C,IAAIF,GAAG,EAAE;QACPA,GAAG,CAACG,SAAS,GAAG,eAAe;QAC/B,KAAK,MAAM,CAAC/B,EAAE,EAAEgC,QAAQ,CAAC,IAAIC,MAAM,CAACC,OAAO,CAAC,IAAI,CAACf,aAAa,CAAC,EAAE;UAC/D,MAAMgB,WAAW,GAAG,IAAI,CAACpB,KAAK,CAACW,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAAC3B,EAAE,KAAKoC,QAAQ,CAACpC,EAAE,CAAC,CAAC;UACtE,IAAImC,WAAW,EAAE;YACfP,GAAG,CAACG,SAAS,IAAI,GAAGC,QAAQ,KAAKG,WAAW,CAAClD,GAAG,IAAIkD,WAAW,CAAC5B,IAAI,GAAGyB,QAAQ,OAAO;;;;MAK5F,IAAI,CAACf,MAAM,CAACoB,IAAI,CAAC;QAAEb,KAAK,EAAEC,GAAG,CAACzB;MAAE,CAAC,CAAC;MAClCsC,OAAO,CAACC,KAAK,CAAC,IAAI,CAACtB,MAAM,CAAC;MAE1B;MACA,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,MAAM,CAACuB,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,GAAGhB,GAAG,CAAClB,IAAI,EAAE,CAAC,CAAC;MAC3E+B,OAAO,CAACK,GAAG,CAAC,aAAa,EAAE,IAAI,CAACzB,UAAU,CAAC;MAC3C,MAAM0B,SAAS,GAAGf,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;MACtD,IAAIc,SAAS,EAAE;QACbA,SAAS,CAACb,SAAS,GAAG,oBAAoB,GAAG,IAAI,CAACb,UAAU,GAAG,GAAG;;;EAGxE;EAEAf,mBAAmBA,CAACqB,KAAa;IAC/B,MAAMC,GAAG,GAAG,IAAI,CAACV,KAAK,CAACW,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAAC3B,EAAE,KAAKwB,KAAK,CAAC;IACvD,IAAIC,GAAG,EAAE;MACP,IAAI,IAAI,CAACN,aAAa,CAACK,KAAK,CAAC,IAAI,IAAI,CAACL,aAAa,CAACK,KAAK,CAAC,GAAG,CAAC,EAAE;QAC9D,IAAI,CAACL,aAAa,CAACK,KAAK,CAAC,IAAI,CAAC;QAC9B,MAAMI,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;QAC9C,IAAIF,GAAG,EAAE;UACPA,GAAG,CAACG,SAAS,GAAG,EAAE;UAClB,KAAK,MAAM,CAAC/B,EAAE,EAAEgC,QAAQ,CAAC,IAAIC,MAAM,CAACC,OAAO,CAAC,IAAI,CAACf,aAAa,CAAC,EAAE;YAC/D,MAAMgB,WAAW,GAAG,IAAI,CAACpB,KAAK,CAACW,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAAC3B,EAAE,KAAKoC,QAAQ,CAACpC,EAAE,CAAC,CAAC;YACtE,IAAImC,WAAW,IAAIH,QAAQ,GAAG,CAAC,EAAE;cAC/BJ,GAAG,CAACG,SAAS,IAAI,GAAGC,QAAQ,KAAKG,WAAW,CAAClD,GAAG,IAAIkD,WAAW,CAAC5B,IAAI,GAAGyB,QAAQ,OAAO;;;;QAM5F,MAAMa,UAAU,GAAG,IAAI,CAAC5B,MAAM,CAAC6B,SAAS,CAAEJ,KAAK,IAAKA,KAAK,CAAClB,KAAK,KAAKC,GAAG,CAACzB,EAAE,CAAC;QAC3E,IAAI6C,UAAU,KAAK,CAAC,CAAC,EAAE;UACrB,IAAI,CAAC5B,MAAM,CAAC8B,MAAM,CAACF,UAAU,EAAE,CAAC,CAAC;;QAEnCP,OAAO,CAACC,KAAK,CAAC,IAAI,CAACtB,MAAM,CAAC;QAE1B;QAEA;QACA,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,MAAM,CAACuB,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,GAAGhB,GAAG,CAAClB,IAAI,EAAE,CAAC,CAAC;QAC3E,MAAMqC,SAAS,GAAGf,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;QACtD,IAAIc,SAAS,EAAE;UACbA,SAAS,CAACb,SAAS,GAAG,oBAAoB,GAAI,IAAI,CAACb,UAAU,CAACV,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;;;MAIlF,IAAI,IAAI,CAACS,MAAM,CAAC+B,MAAM,KAAK,CAAC,EAAE;QAC5B;QACA,IAAI,CAAC/B,MAAM,GAAG,EAAE;;;EAGtB;EAEFgC,iBAAiBA,CAAChC,MAA+C;IAC/D,MAAMiC,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;IAC5C,MAAMC,SAAS,GAAG,IAAI,CAACnC,UAAU;IACjC,MAAMoC,MAAM,GAAGrC,MAAM,CAACsC,GAAG,CAACb,KAAK,IAAI,YAAYA,KAAK,CAAClB,KAAK,EAAE,CAAC;IAC7D,MAAMgC,UAAU,GAAa,EAAE,CAAC,CAAC;IAEjC,MAAMC,QAAQ,GAAG;MACfC,IAAI,EAAER,WAAW;MACjBG,SAAS,EAAEA,SAAS;MACpBC,MAAM,EAAEA,MAAM;MACdE,UAAU,EAAEA;KACb;IACD,IAAI,CAAC1C,mBAAmB,CAAC6C,QAAQ,CAACF,QAAQ,CAAC,CAACnC,SAAS,CAACsC,QAAQ,IAAG;MAC/DtB,OAAO,CAACK,GAAG,CAACiB,QAAQ,CAAC;IACvB,CAAC,EAAEC,KAAK,IAAG;MACTvB,OAAO,CAACuB,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;IAEF,OAAOC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC;EACjC;EAAC,QAAAO,CAAA,G;qBAzGYrD,gBAAgB,EAAAlC,EAAA,CAAAwF,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAA1F,EAAA,CAAAwF,iBAAA,CAAAG,EAAA,CAAAC,mBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhB3D,gBAAgB;IAAA4D,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCL7BpG,EAAA,CAAAS,SAAA,eAA8N;QAE9NT,EAAA,CAAAC,cAAA,UAAO;QACLD,EAAA,CAAAS,SAAA,iBAAyB;QAG3BT,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAEE;QAEED,EAAA,CAAAU,UAAA,IAAA4F,+BAAA,kBAmBM;QACRtG,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAAmB;QACjBD,EAAA,CAAAS,SAAA,aAAsC;QAEtCT,EAAA,CAAAC,cAAA,gBAAiD;QAAzCD,EAAA,CAAAY,UAAA,mBAAA2F,kDAAA;UAAA,OAASF,GAAA,CAAA7B,iBAAA,CAAA6B,GAAA,CAAA7D,MAAA,CAA8B;QAAA,EAAC;QAACxC,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAxB5CH,EAAA,CAAAI,SAAA,GAAU;QAAVJ,EAAA,CAAAgC,UAAA,YAAAqE,GAAA,CAAA/D,KAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}